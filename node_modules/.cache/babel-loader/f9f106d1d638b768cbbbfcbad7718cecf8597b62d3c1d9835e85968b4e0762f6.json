{"ast":null,"code":"var _jsxFileName = \"/Users/chestonopsasnick/Documents/Coding_Projects/DeltsDineV2/client/src/utils/ValidationContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\n\n// Create a context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ValidationContext = /*#__PURE__*/createContext();\n\n// Custom hook to use the validation context\nexport const useValidation = () => {\n  _s();\n  return useContext(ValidationContext);\n};\n\n// ValidationProvider component, defines the value asigned to validated when we call setValidated()\n_s(useValidation, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const ValidationProvider = ({\n  children\n}) => {\n  _s2();\n  const [validated, setValidated] = useState(null);\n  const setValidatedWithExpiration = validated => {\n    const expirationTime = Date.now() + 1000 * 60 * 60 * 24 * 5; // make user relogin after 5 days\n    const data = {\n      validated,\n      expirationTime\n    };\n    localStorage.setItem('validated', JSON.stringify(data));\n  };\n\n  // set validated with an experation time\n  const checkBackendValidation = async () => {\n    try {\n      const res = await fetch('http://localhost:3001/api/validation');\n      if (!res.ok) {\n        throw new Error(`HTTP error, Status: ${res.status}`);\n      }\n      const data = await res.json();\n      if (data.isAuthenticated) {\n        setValidatedWithExpiration(true);\n      } else {\n        localStorage.removeItem('validated');\n        setValidated(false);\n      }\n    } catch (err) {\n      console.error('Error fetching validation data:', err);\n      setValidated(false);\n    }\n  };\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem('validated'));\n    if (data && Date.now() < data.expirationTime) {\n      setValidated(data.validated);\n    } else {\n      checkBackendValidation();\n    }\n  }, []);\n  return (\n    /*#__PURE__*/\n    // Corrected the provider name to 'Provider' with the correct case\n    _jsxDEV(ValidationContext.Provider, {\n      value: {\n        validated,\n        setValidated,\n        setValidatedWithExpiration\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s2(ValidationProvider, \"dIZMNdke310xir7HJqG8xlitzcs=\");\n_c = ValidationProvider;\nvar _c;\n$RefreshReg$(_c, \"ValidationProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","ValidationContext","useValidation","_s","ValidationProvider","children","_s2","validated","setValidated","setValidatedWithExpiration","expirationTime","Date","now","data","localStorage","setItem","JSON","stringify","checkBackendValidation","res","fetch","ok","Error","status","json","isAuthenticated","removeItem","err","console","error","parse","getItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/chestonopsasnick/Documents/Coding_Projects/DeltsDineV2/client/src/utils/ValidationContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\n\n// Create a context\nconst ValidationContext = createContext();\n\n// Custom hook to use the validation context\nexport const useValidation = () => {\n  return useContext(ValidationContext);\n};\n\n// ValidationProvider component, defines the value asigned to validated when we call setValidated()\nexport const ValidationProvider = ({ children }) => {\n  const [validated, setValidated] = useState(null);\n\n  const setValidatedWithExpiration = (validated) => {\n    const expirationTime = Date.now() + 1000 * 60 * 60 * 24 * 5;  // make user relogin after 5 days\n    const data = { validated, expirationTime };\n    localStorage.setItem('validated', JSON.stringify(data));\n  };\n\n  \n  // set validated with an experation time\n  const checkBackendValidation = async () => {\n    try {\n      const res = await fetch('http://localhost:3001/api/validation');\n      if (!res.ok) {\n        throw new Error(`HTTP error, Status: ${res.status}`);\n      }\n      const data = await res.json();\n      if (data.isAuthenticated) {\n        setValidatedWithExpiration(true);\n      } else {\n        localStorage.removeItem('validated');\n        setValidated(false);\n      }\n    } catch (err) {\n      console.error('Error fetching validation data:', err);\n      setValidated(false);\n    }\n  };\n\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem('validated'));\n    if (data && Date.now() < data.expirationTime) {\n      setValidated(data.validated);\n    } else {\n      checkBackendValidation();\n    }\n  }, []);\n\n  return (\n    // Corrected the provider name to 'Provider' with the correct case\n    <ValidationContext.Provider value={{ validated, setValidated, setValidatedWithExpiration }}>\n      {children}\n    </ValidationContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAG7E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,iBAAiB,gBAAGN,aAAa,CAAC,CAAC;;AAEzC;AACA,OAAO,MAAMO,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,OAAOP,UAAU,CAACK,iBAAiB,CAAC;AACtC,CAAC;;AAED;AAAAE,EAAA,CAJaD,aAAa;AAK1B,OAAO,MAAME,kBAAkB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAClD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEhD,MAAMY,0BAA0B,GAAIF,SAAS,IAAK;IAChD,MAAMG,cAAc,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAE;IAC9D,MAAMC,IAAI,GAAG;MAAEN,SAAS;MAAEG;IAAe,CAAC;IAC1CI,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;EACzD,CAAC;;EAGD;EACA,MAAMK,sBAAsB,GAAG,MAAAA,CAAA,KAAY;IACzC,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,sCAAsC,CAAC;MAC/D,IAAI,CAACD,GAAG,CAACE,EAAE,EAAE;QACX,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,GAAG,CAACI,MAAM,EAAE,CAAC;MACtD;MACA,MAAMV,IAAI,GAAG,MAAMM,GAAG,CAACK,IAAI,CAAC,CAAC;MAC7B,IAAIX,IAAI,CAACY,eAAe,EAAE;QACxBhB,0BAA0B,CAAC,IAAI,CAAC;MAClC,CAAC,MAAM;QACLK,YAAY,CAACY,UAAU,CAAC,WAAW,CAAC;QACpClB,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC,CAAC,OAAOmB,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,iCAAiC,EAAEF,GAAG,CAAC;MACrDnB,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAEDV,SAAS,CAAC,MAAM;IACd,MAAMe,IAAI,GAAGG,IAAI,CAACc,KAAK,CAAChB,YAAY,CAACiB,OAAO,CAAC,WAAW,CAAC,CAAC;IAC1D,IAAIlB,IAAI,IAAIF,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGC,IAAI,CAACH,cAAc,EAAE;MAC5CF,YAAY,CAACK,IAAI,CAACN,SAAS,CAAC;IAC9B,CAAC,MAAM;MACLW,sBAAsB,CAAC,CAAC;IAC1B;EACF,CAAC,EAAE,EAAE,CAAC;EAEN;IAAA;IACE;IACAlB,OAAA,CAACC,iBAAiB,CAAC+B,QAAQ;MAACC,KAAK,EAAE;QAAE1B,SAAS;QAAEC,YAAY;QAAEC;MAA2B,CAAE;MAAAJ,QAAA,EACxFA;IAAQ;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACiB;EAAC;AAEjC,CAAC;AAAC/B,GAAA,CA7CWF,kBAAkB;AAAAkC,EAAA,GAAlBlC,kBAAkB;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}