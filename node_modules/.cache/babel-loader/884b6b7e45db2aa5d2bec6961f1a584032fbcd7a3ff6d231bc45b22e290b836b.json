{"ast":null,"code":"var _jsxFileName = \"/Users/chestonopsasnick/Documents/Coding_Projects/DeltsDineV2/client/src/utils/ValidationContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\n\n// Create a context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ValidationContext = /*#__PURE__*/createContext();\n\n// Custom hook to use the validation context\nexport const useValidation = () => {\n  _s();\n  return useContext(ValidationContext);\n};\n\n// ValidationProvider component with the correct naming and capitalization\n_s(useValidation, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const ValidationProvider = ({\n  children\n}) => {\n  _s2();\n  const [validated, setValidated] = useState(() => {\n    const data = JSON.parse(localStorage.getItem('validated'));\n    if (data && Date.now() < data.expirationTime) {\n      return data.validated;\n    } else {\n      localStorage.removeItem('validated');\n      return false; // Expired or not set\n    }\n    return savedValidation ? JSON.parse(savedValidation) : false;\n  });\n\n  // set validated with an experation time\n  const setValidatedWithExpiration = validated => {\n    const expirationTime = Date.now() + 1000 * 10;\n    const data = {\n      validated,\n      expirationTime\n    };\n    localStorage.setItem('validated', JSON.stringify(data));\n  };\n\n  // update local storage when state of savedValidation is changed\n  useEffect(() => {\n    setValidatedWithExpiration(validated);\n  }, [validated]);\n  return (\n    /*#__PURE__*/\n    // Corrected the provider name to 'Provider' with the correct case\n    _jsxDEV(ValidationContext.Provider, {\n      value: {\n        validated,\n        setValidated\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s2(ValidationProvider, \"eBoliHfuNF3Y4hw8bW/tI62e5as=\");\n_c = ValidationProvider;\nvar _c;\n$RefreshReg$(_c, \"ValidationProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","ValidationContext","useValidation","_s","ValidationProvider","children","_s2","validated","setValidated","data","JSON","parse","localStorage","getItem","Date","now","expirationTime","removeItem","savedValidation","setValidatedWithExpiration","setItem","stringify","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/chestonopsasnick/Documents/Coding_Projects/DeltsDineV2/client/src/utils/ValidationContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\n\n// Create a context\nconst ValidationContext = createContext();\n\n// Custom hook to use the validation context\nexport const useValidation = () => {\n  return useContext(ValidationContext);\n};\n\n// ValidationProvider component with the correct naming and capitalization\nexport const ValidationProvider = ({ children }) => {\n  const [validated, setValidated] = useState(() => {\n    const data = JSON.parse(localStorage.getItem('validated'));\n    if (data && Date.now() < data.expirationTime) {\n        return data.validated;\n      } else {\n        localStorage.removeItem('validated');\n        return false; // Expired or not set\n      }\n    return savedValidation ? JSON.parse(savedValidation) : false;\n  }\n);\n\n// set validated with an experation time\nconst setValidatedWithExpiration = (validated) => {\n    const expirationTime = Date.now() + 1000 * 10; \n    const data = { validated, expirationTime };\n    localStorage.setItem('validated', JSON.stringify(data));\n  };\n\n// update local storage when state of savedValidation is changed\nuseEffect(() => {\n    setValidatedWithExpiration(validated);\n}, [validated]);\n\n  return (\n    // Corrected the provider name to 'Provider' with the correct case\n    <ValidationContext.Provider value={{ validated, setValidated }}>\n      {children}\n    </ValidationContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAG7E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,iBAAiB,gBAAGN,aAAa,CAAC,CAAC;;AAEzC;AACA,OAAO,MAAMO,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,OAAOP,UAAU,CAACK,iBAAiB,CAAC;AACtC,CAAC;;AAED;AAAAE,EAAA,CAJaD,aAAa;AAK1B,OAAO,MAAME,kBAAkB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAClD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,MAAM;IAC/C,MAAMY,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC;IAC1D,IAAIJ,IAAI,IAAIK,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGN,IAAI,CAACO,cAAc,EAAE;MAC1C,OAAOP,IAAI,CAACF,SAAS;IACvB,CAAC,MAAM;MACLK,YAAY,CAACK,UAAU,CAAC,WAAW,CAAC;MACpC,OAAO,KAAK,CAAC,CAAC;IAChB;IACF,OAAOC,eAAe,GAAGR,IAAI,CAACC,KAAK,CAACO,eAAe,CAAC,GAAG,KAAK;EAC9D,CACF,CAAC;;EAED;EACA,MAAMC,0BAA0B,GAAIZ,SAAS,IAAK;IAC9C,MAAMS,cAAc,GAAGF,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE;IAC7C,MAAMN,IAAI,GAAG;MAAEF,SAAS;MAAES;IAAe,CAAC;IAC1CJ,YAAY,CAACQ,OAAO,CAAC,WAAW,EAAEV,IAAI,CAACW,SAAS,CAACZ,IAAI,CAAC,CAAC;EACzD,CAAC;;EAEH;EACAX,SAAS,CAAC,MAAM;IACZqB,0BAA0B,CAACZ,SAAS,CAAC;EACzC,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEb;IAAA;IACE;IACAP,OAAA,CAACC,iBAAiB,CAACqB,QAAQ;MAACC,KAAK,EAAE;QAAEhB,SAAS;QAAEC;MAAa,CAAE;MAAAH,QAAA,EAC5DA;IAAQ;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACiB;EAAC;AAEjC,CAAC;AAACrB,GAAA,CA/BWF,kBAAkB;AAAAwB,EAAA,GAAlBxB,kBAAkB;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}