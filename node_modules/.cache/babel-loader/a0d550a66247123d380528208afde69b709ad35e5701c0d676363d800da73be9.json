{"ast":null,"code":"var _jsxFileName = \"/Users/chestonopsasnick/Documents/Coding_Projects/DeltsDineV2/client/src/utils/ProtectedRoutes.js\",\n  _s = $RefreshSig$();\nimport React, { useLayoutEffect, useState } from 'react';\nimport { Outlet, Navigate, useLocation } from \"react-router-dom\";\nimport { requestAuth } from './requestAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProtectedRoutes() {\n  _s();\n  const location = useLocation(); // for checking admin routes\n\n  const [validated, setValidated] = useState([]);\n  const [admin, setAdmin] = useState([]);\n  // const {validated} = useValidation();\n  // console.log(\"protected routes \" + validated);\n  // // Handle loading state if validation is still being checked\n\n  // if (validated === null) {\n  //     return <div>Loading...</div>; // replace with loading ui\n  // }\n\n  // console.log(\"validated value right after declaration:  \" + validated);\n  useLayoutEffect(async () => {\n    const isValidated = await requestAuth();\n    // console.log(\"isValidated: \" + isValidated);\n    setValidated(isValidated.authorized);\n    setAdmin(isValidated.isAdmin);\n  }, []);\n\n  // console.log(\"is validated a truthy?: \" + (validated == true));\n  const isAdminRoute = location.pathname.startsWith('/admin');\n  // console.log(\"is admin route: \" + isAdminRoute);\n\n  if (!validated) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 16\n    }, this);\n  }\n  if (isAdminRoute && !admin) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/unauthorized\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 12\n  }, this);\n}\n_s(ProtectedRoutes, \"vH3AWDlK95W3P7MjuLUf7ngoqSg=\", false, function () {\n  return [useLocation];\n});\n_c = ProtectedRoutes;\nexport default ProtectedRoutes;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoutes\");","map":{"version":3,"names":["React","useLayoutEffect","useState","Outlet","Navigate","useLocation","requestAuth","jsxDEV","_jsxDEV","ProtectedRoutes","_s","location","validated","setValidated","admin","setAdmin","isValidated","authorized","isAdmin","isAdminRoute","pathname","startsWith","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/chestonopsasnick/Documents/Coding_Projects/DeltsDineV2/client/src/utils/ProtectedRoutes.js"],"sourcesContent":["import React, {useLayoutEffect, useState} from 'react'\nimport { Outlet, Navigate, useLocation  } from \"react-router-dom\";\nimport { requestAuth } from './requestAuth';\n\nfunction ProtectedRoutes() {\n    const location = useLocation(); // for checking admin routes\n\n    const [validated, setValidated] = useState([]);\n    const [admin, setAdmin] = useState([]);\n    // const {validated} = useValidation();\n    // console.log(\"protected routes \" + validated);\n    // // Handle loading state if validation is still being checked\n\n    // if (validated === null) {\n    //     return <div>Loading...</div>; // replace with loading ui\n    // }\n    \n    // console.log(\"validated value right after declaration:  \" + validated);\n    useLayoutEffect( async () => {\n        const isValidated = await requestAuth();\n        // console.log(\"isValidated: \" + isValidated);\n        setValidated(isValidated.authorized);\n        setAdmin(isValidated.isAdmin);\n       \n    }, []);\n   \n    // console.log(\"is validated a truthy?: \" + (validated == true));\n    const isAdminRoute = location.pathname.startsWith('/admin');\n    // console.log(\"is admin route: \" + isAdminRoute);\n\n    if (!validated) {\n        return <Navigate to=\"/login\"/>;\n    }\n    if (isAdminRoute && !admin) {\n        return <Navigate to=\"/unauthorized\"/>;\n    }\n    return <Outlet/>;\n}\nexport default ProtectedRoutes"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,eAAe,EAAEC,QAAQ,QAAO,OAAO;AACtD,SAASC,MAAM,EAAEC,QAAQ,EAAEC,WAAW,QAAS,kBAAkB;AACjE,SAASC,WAAW,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACAD,eAAe,CAAE,YAAY;IACzB,MAAMe,WAAW,GAAG,MAAMV,WAAW,CAAC,CAAC;IACvC;IACAO,YAAY,CAACG,WAAW,CAACC,UAAU,CAAC;IACpCF,QAAQ,CAACC,WAAW,CAACE,OAAO,CAAC;EAEjC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,YAAY,GAAGR,QAAQ,CAACS,QAAQ,CAACC,UAAU,CAAC,QAAQ,CAAC;EAC3D;;EAEA,IAAI,CAACT,SAAS,EAAE;IACZ,oBAAOJ,OAAA,CAACJ,QAAQ;MAACkB,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAClC;EACA,IAAIP,YAAY,IAAI,CAACL,KAAK,EAAE;IACxB,oBAAON,OAAA,CAACJ,QAAQ;MAACkB,EAAE,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EACzC;EACA,oBAAOlB,OAAA,CAACL,MAAM;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AACpB;AAAChB,EAAA,CAjCQD,eAAe;EAAA,QACHJ,WAAW;AAAA;AAAAsB,EAAA,GADvBlB,eAAe;AAkCxB,eAAeA,eAAe;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}