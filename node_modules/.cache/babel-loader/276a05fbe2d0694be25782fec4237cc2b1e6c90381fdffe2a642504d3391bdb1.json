{"ast":null,"code":"var _jsxFileName = \"/Users/chestonopsasnick/Documents/Coding_Projects/DeltsDineV2/client/src/utils/ProtectedRoutes.js\",\n  _s = $RefreshSig$();\nimport React, { useLayoutEffect, useState } from 'react';\nimport { Outlet, Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function requestAuth() {\n  let ret = null;\n  await fetch('http://localhost:3001/api/validation', {\n    method: 'GET',\n    credentials: 'include' // ensure cookies are sent with the request\n  }).then(res => res.json()).then(data => {\n    console.log(data);\n    if (data.authorized) {\n      if (data.isAdmin) {\n        ret = {\n          authorized: true,\n          isAdmin: true\n        };\n      } else {\n        ret = {\n          authorized: true,\n          isAdmin: false\n        };\n      }\n      // console.log(\"if is authenitcated ret is: \" + ret);\n    } else {\n      ret = {\n        authorized: false,\n        isAdmin: false\n      };\n    }\n  }).catch(err => {\n    // console.log('Error fetching validation data:', err);\n    ret = {\n      authorized: false,\n      isAdmin: false\n    };\n  });\n  return ret;\n}\nfunction ProtectedRoutes() {\n  _s();\n  const [validated, setValidated] = useState([]);\n  const [admin, setAdmin] = useState([]);\n  // const {validated} = useValidation();\n  // console.log(\"protected routes \" + validated);\n  // // Handle loading state if validation is still being checked\n\n  // if (validated === null) {\n  //     return <div>Loading...</div>; // replace with loading ui\n  // }\n\n  // console.log(\"validated value right after declaration:  \" + validated);\n  useLayoutEffect(() => {\n    const checkAuth = async () => {\n      const isValidated = await requestAuth();\n      // console.log(\"isValidated: \" + isValidated);\n      setValidated(isValidated.authorized);\n      setAdmin(isValidated.isAdmin);\n    };\n    checkAuth();\n  }, []);\n\n  // console.log(\"is validated a truthy?: \" + (validated == true));\n  const isAdminRoute = location.pathname.startsWith('/admin');\n  // console.log(\"is admin route: \" + isAdminRoute);\n\n  if (!validated) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 16\n    }, this);\n  }\n  if (isAdminRoute && !admin) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/unauthorized\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 12\n  }, this);\n}\n_s(ProtectedRoutes, \"sD7UjHLgzTOo+DXxY536irylmUI=\");\n_c = ProtectedRoutes;\nexport default ProtectedRoutes;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoutes\");","map":{"version":3,"names":["React","useLayoutEffect","useState","Outlet","Navigate","jsxDEV","_jsxDEV","requestAuth","ret","fetch","method","credentials","then","res","json","data","console","log","authorized","isAdmin","catch","err","ProtectedRoutes","_s","validated","setValidated","admin","setAdmin","checkAuth","isValidated","isAdminRoute","location","pathname","startsWith","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/chestonopsasnick/Documents/Coding_Projects/DeltsDineV2/client/src/utils/ProtectedRoutes.js"],"sourcesContent":["import React, {useLayoutEffect, useState} from 'react'\nimport { Outlet, Navigate } from \"react-router-dom\";\n\nasync function requestAuth() {\n    let ret = null;\n    await fetch('http://localhost:3001/api/validation', {\n        method: 'GET',\n        credentials: 'include', // ensure cookies are sent with the request\n    })\n    .then(res => res.json())   \n    .then(data => {\n        console.log(data);\n        if (data.authorized) {\n            if (data.isAdmin) {\n                ret = {authorized: true, isAdmin: true};\n            } else{\n                ret = {authorized: true, isAdmin: false};\n            }\n            // console.log(\"if is authenitcated ret is: \" + ret);\n        } else {\n            ret = {authorized: false, isAdmin: false};\n        }\n    })\n    .catch (err => {\n        // console.log('Error fetching validation data:', err);\n        ret = {authorized: false, isAdmin: false};\n    });\n    return ret;\n}\nfunction ProtectedRoutes() {\n    const [validated, setValidated] = useState([]);\n    const [admin, setAdmin] = useState([]);\n    // const {validated} = useValidation();\n    // console.log(\"protected routes \" + validated);\n    // // Handle loading state if validation is still being checked\n\n    // if (validated === null) {\n    //     return <div>Loading...</div>; // replace with loading ui\n    // }\n    \n    // console.log(\"validated value right after declaration:  \" + validated);\n    useLayoutEffect(() => {\n        const checkAuth = async () => {\n        const isValidated = await requestAuth();\n        // console.log(\"isValidated: \" + isValidated);\n        setValidated(isValidated.authorized);\n        setAdmin(isValidated.isAdmin);\n        };\n        checkAuth();\n    }, []);\n   \n    // console.log(\"is validated a truthy?: \" + (validated == true));\n    const isAdminRoute = location.pathname.startsWith('/admin');\n    // console.log(\"is admin route: \" + isAdminRoute);\n\n    if (!validated) {\n        return <Navigate to=\"/login\"/>;\n    }\n    if (isAdminRoute && !admin) {\n        return <Navigate to=\"/unauthorized\"/>;\n    }\n    return <Outlet/>;\n}\nexport default ProtectedRoutes"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,eAAe,EAAEC,QAAQ,QAAO,OAAO;AACtD,SAASC,MAAM,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,eAAeC,WAAWA,CAAA,EAAG;EACzB,IAAIC,GAAG,GAAG,IAAI;EACd,MAAMC,KAAK,CAAC,sCAAsC,EAAE;IAChDC,MAAM,EAAE,KAAK;IACbC,WAAW,EAAE,SAAS,CAAE;EAC5B,CAAC,CAAC,CACDC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;IACVC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjB,IAAIA,IAAI,CAACG,UAAU,EAAE;MACjB,IAAIH,IAAI,CAACI,OAAO,EAAE;QACdX,GAAG,GAAG;UAACU,UAAU,EAAE,IAAI;UAAEC,OAAO,EAAE;QAAI,CAAC;MAC3C,CAAC,MAAK;QACFX,GAAG,GAAG;UAACU,UAAU,EAAE,IAAI;UAAEC,OAAO,EAAE;QAAK,CAAC;MAC5C;MACA;IACJ,CAAC,MAAM;MACHX,GAAG,GAAG;QAACU,UAAU,EAAE,KAAK;QAAEC,OAAO,EAAE;MAAK,CAAC;IAC7C;EACJ,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAI;IACX;IACAb,GAAG,GAAG;MAACU,UAAU,EAAE,KAAK;MAAEC,OAAO,EAAE;IAAK,CAAC;EAC7C,CAAC,CAAC;EACF,OAAOX,GAAG;AACd;AACA,SAASc,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACwB,KAAK,EAAEC,QAAQ,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EACtC;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACAD,eAAe,CAAC,MAAM;IAClB,MAAM2B,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMC,WAAW,GAAG,MAAMtB,WAAW,CAAC,CAAC;MACvC;MACAkB,YAAY,CAACI,WAAW,CAACX,UAAU,CAAC;MACpCS,QAAQ,CAACE,WAAW,CAACV,OAAO,CAAC;IAC7B,CAAC;IACDS,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,YAAY,GAAGC,QAAQ,CAACC,QAAQ,CAACC,UAAU,CAAC,QAAQ,CAAC;EAC3D;;EAEA,IAAI,CAACT,SAAS,EAAE;IACZ,oBAAOlB,OAAA,CAACF,QAAQ;MAAC8B,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAClC;EACA,IAAIR,YAAY,IAAI,CAACJ,KAAK,EAAE;IACxB,oBAAOpB,OAAA,CAACF,QAAQ;MAAC8B,EAAE,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EACzC;EACA,oBAAOhC,OAAA,CAACH,MAAM;IAAAgC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AACpB;AAACf,EAAA,CAjCQD,eAAe;AAAAiB,EAAA,GAAfjB,eAAe;AAkCxB,eAAeA,eAAe;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}